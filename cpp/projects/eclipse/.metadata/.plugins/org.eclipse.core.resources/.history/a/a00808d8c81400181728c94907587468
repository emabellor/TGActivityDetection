/*
 * ClassMain.h
 *
 *  Created on: Feb 4, 2018
 *      Author: mauricio
 */

#ifndef CLASSMAIN_H_
#define CLASSMAIN_H_

// Standard Includes
#include <iostream>
#include <string>
#include <fstream>
#include <vector>

// Boost Includes
#include <boost/lexical_cast.hpp>
#include <boost/format.hpp>

// OpenCV Includes
#include <opencv2/opencv.hpp>

// Custom Includes
#include "ClassOpenPose.h"
#include "ImageProcess.h"
#include "FileHandler.h"

typedef struct _StuctDu {
	double arrayX [14];
	double arrayY [14];
	double arrayZ [14];

} StructDu;

typedef struct _DescriptorDu {
	int identifier;
	std::vector<std::string> files;
} DescriptorDu;


class ClassMain {
public:
	// Constructors
	ClassMain();
	virtual ~ClassMain();

	// Functions
	void InitProcess(int argc, char** argv);

private:
	// Constants
	const std::string defaultImage = "/home/mauricio/Pictures/test3.png";
	const std::string defaultCompareImage1 = "/home/mauricio/Pictures/test4.png";
	const std::string defaultCompareImage2 = "/home/mauricio/Pictures/test5.png";
	const int rectSize = 14; // Should be multiples of 2
	const double scoreThresh = 0.4;

	// Functions
	void InitLogger();
	void ProcessKeyPoints(int argc, char** argv);
	void ShowKeyPoints(int argc, char** argv);
	void PersonReidentification(int argc, char** argv);
	void ExtractKeyPosesDescriptor(int argc, char** argv);
	void ExtractDescriptorsDu(int argc, char** argv);
	void Clustering(int argc, char** argv);
	void TestDrawPose(int argc, char** argv);
	void TestVideoCapInfo(int argc, char** argv);

	double GetColorPoses(cv::Mat image, StructPoints pose1, StructPoints pose2);
	std::vector<std::string> SplitStr(std::string str, std::string delimiter);
};

#endif /* CLASSMAIN_H_ */
