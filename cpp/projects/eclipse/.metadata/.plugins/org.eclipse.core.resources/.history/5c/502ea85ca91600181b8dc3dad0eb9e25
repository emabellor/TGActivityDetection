/*
 * ClassVideoSaver.cpp
 *
 *  Created on: Feb 20, 2018
 *      Author: mauricio
 */

#include "ClassMJPEGReader.h"

using namespace std;

ClassVideoSaver::ClassVideoSaver() {
	// TODO Auto-generated constructor stub

}

ClassVideoSaver::~ClassVideoSaver() {
	// TODO Auto-generated destructor stub
}

vector<FrameInfo> ClassVideoSaver::ProcessVideo(string filePath) {
	cout << "Initializing process video " << filePath << endl;

	// Initialize elements
	vector<FrameInfo> listFrames;

	// Loading video
	ifstream file (filePath, ios::in|ios::binary);

	if (file.is_open() == false) {
		cerr << "Error opening file" << endl;
		return false;
	} else {
		while(!file.eof()) {
			// Reading file size
			char fileSizeBin [4];
			int bytes = file.read(fileSizeBin, 4);

			if (bytes != 4) {
				cerr << "Error reading file size" << endl;
				return false;
			}

			int fileSize = ByteArrayToInt(fileSizeBin);


			// Reading dateTime
			char dateTimeBin[8];
			bytes = file.read(dateTimeBin, 8);

			if (bytes != 8) {
				cerr << "Error reading Date Time" << endl;
				return false;
			}

			// Reading image
			char imageBin[fileSize];
			bytes = file.read(imageBin, fileSize);

			if (bytes != fileSize) {
				cerr << "Error reading Image" << endl;
				return false;
			}

			// Converting to Mat
			cv::Mat image = ImageProcess::GetFromCharBuffer(imageBin);
		}
	}

}

int ClassVideoSaver::ByteArrayToInt(char * b) {
	int i = ((unsigned char)b[3] << 24) | ((unsigned char)b[2] << 16) | ((unsigned char)b[1] << 8) | ((unsigned char)b[0]);
	return i;
}

