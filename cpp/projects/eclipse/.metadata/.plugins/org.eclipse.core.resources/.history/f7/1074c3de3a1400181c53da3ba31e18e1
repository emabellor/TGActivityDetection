/*
 * FileHandler.cpp
 *
 *  Created on: Feb 17, 2018
 *      Author: mauricio
 */

#include "FileHandler.h"


FileHandler::FileHandler() {
	// TODO Auto-generated constructor stub

}

FileHandler::~FileHandler() {
	// TODO Auto-generated destructor stub
}

bool FileHandler::DirectoryExists(std::string filePath) {
	// Boost way
	bool result = boost::filesystem::exists(filePath);
	std::cout << "Result: " << result << std::endl;
	return result;
}

void FileHandler::CreateDirectory(std::string filePath) {
	// Boost way
	boost::filesystem::create_directory(filePath);
}

std::string FileHandler::JoinPath(std::string path1, std::string path2) {
	boost::filesystem::path pathBoost1 (path1);
	boost::filesystem::path pathBoost2 (path2);
	boost::filesystem::path full_path = pathBoost1 / pathBoost2;

	return full_path.string();
}

std::vector<std::string> FileHandler::ReadAllFiles(std::string dirPath) {
	std::vector<std::string> response;

	DIR *dir;
	struct dirent *ent;
	if ((dir = opendir ("c:\\src\\")) != NULL) {
		/* print all the files and directories within directory */
		while ((ent = readdir (dir)) != NULL) {
			std::string str(ent->d_name);
			printf ("%s\n", ent->d_name);
		}
		closedir (dir);
	} else {
		/* could not open directory */
		perror ("");
		return EXIT_FAILURE;
	}
}

